<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AnomalyDetection.Interfaces</name>
    </assembly>
    <members>
        <member name="T:AnomalyDetection.Interfaces.AnomalyDetectionResponse">
            <summary>
            AnomalyDetectionResponse is a class that is used to determine whether the function succeeded or encountered an error. Note that the error message is preceeded by the function name <br />
            <br />
            Succes/Error Codes and Messages: <br />
            - success: 0-99 <br />
            - user input errors: 100-199
            <ul style="list-style-type:none">
            <li> - 100    "RawData is null" </li>
            <li> - 101    "At least one input is null" </li>
            <li> - 102    "RawData is empty" </li>
            <li> - 103    "Means is empty" </li>
            <li> - 104    "Maximum number of clusters must be at least 2" </li>
            <li> - 105	  "Unacceptable number of clusters. Clusters more than samples" </li>
            <li> - 106	  "Unacceptable number of clusters. Must be at least 2" </li>
            <li> - 107	  "Unacceptable number of attributes. Must be at least 1" </li>
            <li> - 108	  "Unacceptable number of maximum iterations" </li>
            <li> - 109	  "Unacceptable save obect" </li>
            <li> - 110	  "Unacceptable tolerance value" </li>
            <li> - 111	  "Data sample and number of attributes are inconsistent. First encountered inconsistency in data sample: " + Sample_Index + "." </li>
            <li> - 112	  "Mismatch between old and new cluster numbers" </li>
            <li> - 113	  "Mismatch between old and new number of atributes" </li>
            <li> - 114	  "Mismatch in number of attributes" </li>
            <li> - 115	  "Inputs have different dimensions" </li>
            <li> - 116	  "Path provided : " + Path + " has no root" </li>
            <li> - 117	  "Path provided : " + Path + " contains invalid chars. First invalid char encountered is: " + Invalid_Char + "." </li>
            <li> - 118	  "Path provided : " + Path + " has no project name specified." </li>
            <li> - 119	  "Path provided : " + Path + " has a project name containing invalid chars. First invalid char encountered is: " + Invalid_Char + "." </li>
            <li> - 120	  "Path provided : " + Path + " has wrong extension." </li>
            <li> - 121	  "Requested load path does not exist" </li>
            <li> - 122	  "Method must be either 0,1 or 2" </li>
            <li> - 123	  "Parameter StdDev is needed" </li>
            <li> - 124	  "Unacceptable input for K-means Algorithm" </li>
            <li> - 125	  "Settings to save can't be null" </li>
            <li> - 126	  "Settings to load can't be null" </li>
            <li> - 127	  "Undefined Method to save or load" </li>
            </ul>
            - file related errors: 200-299
            <ul style="list-style-type:none">
            <li> - 200	  "File not found" </li>
            <li> - 201	  "File already exists" </li>
            <li> - 202	  "File cannot be loaded" </li>
            <li> - 203	  "File content is corrupted" </li>
            <li> - 204	  "Unauthorized access to file. File is readonly." </li>
            <li> - 205	  "Unauthorized access to file. File is a system file." </li>
            <li> - 206	  "Can't deserialize file" </li>
            </ul>
            - calculation errors: 300-399
            <ul style="list-style-type:none">
            <li> - 300	  "Division by zero" </li>
            </ul>
            - unhandled errors: 400
            <ul style="list-style-type:none">
            <li> - 400     "Unhnadled exception: " + Exception </li>
            </ul>
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.AnomalyDetectionResponse.Code">
            <summary>
            integer that is related to the state of the function
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.AnomalyDetectionResponse.Message">
            <summary>
            string that is related to the state of the function
            </summary>
        </member>
        <member name="M:AnomalyDetection.Interfaces.AnomalyDetectionResponse.#ctor(System.Int32,System.String)">
            <summary>
            Constructor to create the AnomalyDetection response
            </summary>
            <param name="Code">integer that is related to the state of the function</param>
            <param name="Message">string that is related to the state of the function</param>
        </member>
        <member name="T:AnomalyDetection.Interfaces.CheckingSampleSettings">
            <summary>
            CheckingSampleSettings is a class that contains the desired settings by the user for checking to which cluster a sample belongs
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.CheckingSampleSettings.LoadProjectSettings">
            <summary>
            settings to the clustering intance that contains the clusters data
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.CheckingSampleSettings.Sample">
            <summary>
            the sample to be checked
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.CheckingSampleSettings.tolerance">
            <summary>
            a value in % representing the tolerance to possible outliers
            </summary>
        </member>
        <member name="M:AnomalyDetection.Interfaces.CheckingSampleSettings.#ctor(AnomalyDetection.Interfaces.SaveLoadSettings,System.Double[],System.Double)">
            <summary>
            Constructor to create the desired settings by the user for checking to which cluster a sample belongs
            </summary>
            <param name="LoadProjectSettings">settings to the clustering intance that contains the clusters data</param>
            <param name="Sample">the sample to be checked</param>
            <param name="tolerance">a value in % representing the tolerance to possible outliers</param>
        </member>
        <member name="T:AnomalyDetection.Interfaces.ClusteringResults">
            <summary>
            ClusteringResults is a class that contains the results per cluster of a clustering instance with additional statistics.
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.ClusterDataOriginalIndex">
            <summary>
            the original index of this cluster's samples before clustering
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.ClusterData">
            <summary>
            the samples that belong to this cluster
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.ClusterDataDistanceToCentroid">
            <summary>
            distance between eanch sample of this cluster and it's cetroid
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.Centroid">
            <summary>
            the centroid of the cluster
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.Mean">
            <summary>
            the mean of the cluster
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.StandardDeviation">
            <summary>
            the standard deviation in the cluster
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.InClusterFarthestSampleIndex">
            <summary>
            the index of the farthest sample, of this cluster, from centroid (not original index)
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.InClusterFarthestSample">
            <summary>
            the farthest sample, of this cluster, from centroid
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.InClusterMaxDistance">
            <summary>
            distance between the centroid and the farthest sample of this cluster
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.NearestCluster">
            <summary>
            nearest cluster number
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.DistanceToNearestClusterCentroid">
            <summary>
            distance between the centroid of this cluster and that of nearest cluster
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.NearestForeignSampleInNearestCluster">
            <summary>
            nearest sample belonging of the nearest cluster to this cluster's centroid
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.DistanceToNearestForeignSampleInNearestCluster">
            <summary>
            distance between the nearest sample of the nearest cluster and this cluster's centroid
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.NearestForeignSample">
            <summary>
            nearest sample not belonging to this cluster and this cluster's centroid
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.DistanceToNearestForeignSample">
            <summary>
            distance between the nearest foreign sample and this cluster's centroid
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringResults.ClusterOfNearestForeignSample">
            <summary>
            the cluster to which the nearest foreign sample belongs
            </summary>
        </member>
        <member name="M:AnomalyDetection.Interfaces.ClusteringResults.#ctor">
            <summary>
            Dummy constructor
            </summary>
        </member>
        <member name="M:AnomalyDetection.Interfaces.ClusteringResults.CreateClusteringResult(System.Double[][],System.Int32[],System.Double[][],System.Int32)">
            <summary>
            CreateClusteringResult is a function that generates the clustering results using several subfunctions.
            </summary>
            <param name="RawData">data to be clustered</param>
            <param name="DataToClusterMapping">contains the assigned cluster number for each sample of the RawData</param>
            <param name="Centroids">the centroids of the clusters</param>
            <param name="NumberOfClusters">the number of clusters</param>
            <returns>Tuple of two Items: <br />
            - Item 1: contains the results for each cluster <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.ClusteringResults.SamplesInClusterNumber(System.Double[][],System.Int32[],System.Int32)">
            <summary>
            SamplesInCLusterNumber is a function that counts the number of samples of each cluster.
            </summary>
            <param name="RawData">data to be clustered</param>
            <param name="DataToClusterMapping">contains the assigned cluster number for each sample of the RawData</param>
            <param name="NumberOfClusters">the number of clusters</param>
            <returns>Tuple of two Items: <br />
            - Item 1: contains the number of samples for each cluster <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.ClusteringResults.AssignSamplesToClusters(System.Double[][],System.Int32[],System.Int32)">
            <summary>
            AssignSamplesToClusters is a function that groups the samples of a cluster.
            </summary>
            <param name="RawData">data to be clustered</param>
            <param name="DataToClusterMapping">contains the assigned cluster number for each sample of the RawData</param>
            <param name="ClusterIndex">number of the cluster</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.ClusteringResults.CalculateStatistics">
            <summary>
            CalculateStatistics is a function that claculates statistics and properties of a cluster. These statistics are independent on other clusters.
            </summary>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.ClusteringResults.CalculateNearestCluster(System.Double[][],System.Int32[])">
            <summary>
            CalculateNearestCluster is a function that determines the nearest cluster and calculates the distance between those two clusters.
            </summary>
            <param name="Centroids">the centroids of the clusters</param>
            <param name="SamplesInClusters">number of samples in each cluster</param>
            <returns>Tuple of three Items: <br />
            - Item 1: contains the number of nearest cluster <br />
            - Item 2: contains the distance to the nearest cluster <br />
            - Item 3: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.ClusteringResults.CalculateMoreStatistics(System.Double[][],System.Int32[],System.Double[][],System.Int32[],System.Double[][]@,System.Double[]@,System.Double[][]@,System.Double[]@,System.Int32[]@)">
            <summary>
            CalculateNoreStatistics is a function that claculates statistics of a cluster. These statistics are dependent on other clusters.
            </summary>
            <param name="RawData">data to be clustered</param>
            <param name="DataToClusterMapping">contains the assigned cluster number for each sample of the RawData</param>
            <param name="Centroids">the centroids of the clusters</param>
            <param name="NearestCluster">nearest cluster number</param>
            <param name="NearestForeignSampleInNearestCluster">nearest sample belonging of the nearest cluster to this cluster's centroid</param>
            <param name="DistanceToNearestForeignSampleInNearestCluster">distance between the nearest sample of the nearest cluster and this cluster's centroid</param>
            <param name="NearestForeignSample">nearest sample not belonging to this cluster and this cluster's centroid</param>
            <param name="DistanceToNearestForeignSample">distance between the nearest foreign sample and this cluster's centroid</param>
            <param name="ClusterOfNearestForeignSample">the cluster to which the nearest foreign sample belongs</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.ClusteringResults.CalculateDistance(System.Double[],System.Double[])">
            <summary>
            CalculateDistance is a function that claculates the distance between two elements of same size.
            </summary>
            <param name="FirstElement">first element</param>
            <param name="SecondElement">second element</param>
            <returns> Tuple of two Items: <br />
            - Item 1: distance between the two elements <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="T:AnomalyDetection.Interfaces.IAnomalyDetectionApi">
            <summary>
            Interface for AnomalyDetectionAPI
            </summary>
        </member>
        <member name="M:AnomalyDetection.Interfaces.IAnomalyDetectionApi.ImportNewDataForClustering(AnomalyDetection.Interfaces.ClusteringSettings)">
            <summary>
            ImportNewDataForClustering is a function that start a new clustering instance or add to an existing one. It saves the results automatically.
            </summary>
            <param name="Settings">contains the desired settings for the clustering process</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "Clustering Complete. K-means stopped at the maximum allowed iteration: " + Maximum_Allowed_Iteration </li>
            <li> or </li>
            <li> - Code: 0, "Clustering Complete. K-means converged at iteration: " + Iteration_Reached </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.IAnomalyDetectionApi.CheckSample(AnomalyDetection.Interfaces.CheckingSampleSettings,System.Int32@)">
            <summary>
            CheckSample is a function that detects to which cluster the given sample belongs to.
            </summary>
            <param name="Settings">contains the desired settings for detecting to which, if any, cluster the sample belongs</param>
            <param name="ClusterIndex">the cluster number to which the sample belongs (-1 if the sample doesn't belong to any cluster or if an error was encountered).</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "This sample belongs to cluster: " + Cluster_Number </li>
            <li> or </li>
            <li> - Code: 1, "This sample doesn't belong to any cluster" </li>
            </ul>       
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.IAnomalyDetectionApi.GetResults(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.ClusteringResults[]@)">
            <summary>
            GetResults is a function that returns the results of an existing clustering instance 
            </summary>
            <param name="LoadSettings">settings to load the clustering instance</param>
            <param name="Result">the variable through which the clustering result are returned</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.IAnomalyDetectionApi.GetPreviousSamples(AnomalyDetection.Interfaces.SaveLoadSettings,System.Double[][]@)">
            <summary>
            GetPreviousSamples is a function that loads samples from a previous clustering instance
            </summary>
            <param name="LoadSettings">settings to load the clustering instance</param>
            <param name="OldSamples">the variable through which the samples are returned</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetection.Interfaces.IAnomalyDetectionApi.RecommendedNumberOfClusters(System.Double[][],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32@,System.Int32)">
            <summary>
            RecommendedNumberOfClusters is a function that returns a recommended number of clusters for the given samples.
            </summary>
            <param name="RawData">the samples to be clustered</param>
            <param name="KmeansMaxIterations">maximum allowed number of Kmeans iteration for clustering</param>
            <param name="KmeansAlgorithm">the desired Kmeans clustering algorithm (1 or 2)
            <ul style="list-style-type:none">
            <li> - 1: Centoids are the nearest samples to the means</li>
            <li> - 2: Centoids are the means</li>
            </ul></param>
            <param name="NumberOfAttributes">number of attributes for each sample</param>
            <param name="MaxNumberOfClusters">maximum desired number of clusters</param>
            <param name="MinNumberOfClusters">minimum desired number of clusters</param>
            <param name="Method">integer 0,1 or 2 representing the method to be used. 
            <ul style = "list-style-type:none" >
            <li> - Method 0: Radial method in which the farthest sample of each cluster must be closer to the cluster centoid than the nearest foreign sample of the other clusters </li>
            <li> - Method 1: Standard Deviation method in which the standard deviation in each cluster must be less than the desired standard deviation </li>
            <li> - Method 2: Both. uses radial and standard deviation methods at the same time </li>
            </ul>
            </param>
            <param name="StdDev">the desired standard deviation upper limit in each cluster</param>
            <param name="RecNumberOfClusters">the variable through which the recommended number of clusters is returned</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style = "list-style-type:none" >
            <li> - Code: 0, "OK" </li>
            <li> or </li>
            <li> - Code: 1, "Could not find a recommended number of clusters based on the desired constraints" </li>
            </ul>
            </returns>
        </member>
        <member name="T:AnomalyDetection.Interfaces.ClusteringSettings">
            <summary>
            ClusteringSettings is a class that contains the desired settings by the user for clustering.
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringSettings.RawData">
            <summary>
            data to be clustered
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringSettings.KmeansAlgorithm">
            <summary>
            the desired Kmeans clustering algorithm (1 or 2)
            <ul style="list-style-type:none">
            <li> - 1: Centoids are the nearest samples to the means</li>
            <li> - 2: Centoids are the means</li>
            </ul>
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringSettings.KmeansMaxIterations">
            <summary>
            maximum allowed number of Kmeans iteration for clustering
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringSettings.NumberOfClusters">
            <summary>
            number of clusters
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringSettings.InitialGuess">
            <summary>
            a bool, if true Kmeans clustering start with an initial guess for the centroids else it will start with a random assignment
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringSettings.NumberOfAttributes">
            <summary>
            number of attributes for each sample
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringSettings.SaveObject">
            <summary>
            settings to save the clustering instance
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.ClusteringSettings.LoadObject">
            <summary>
            settings to load a clustering instance (can be "" or null in case of not loading)
            </summary>
        </member>
        <member name="M:AnomalyDetection.Interfaces.ClusteringSettings.#ctor(System.Double[][],System.Int32,System.Int32,System.Int32,AnomalyDetection.Interfaces.SaveLoadSettings,System.Int32,System.Boolean,AnomalyDetection.Interfaces.SaveLoadSettings,System.Boolean)">
            <summary>
            Constructor to create the desired settings by the user for clustering.
            </summary>
            <param name="RawData">data to be clustered</param>
            <param name="KmeansMaxIterations">maximum allowed number of Kmeans iteration for clustering</param>
            <param name="NumberOfClusters">number of clusters</param>
            <param name="NumberOfAttributes">number of attributes for each sample</param>
            <param name="SaveObject">settings to save the clustering instance</param>
            <param name="KmeansAlgorithm">the desired Kmeans clustering algorithm (1 or 2)
            <ul style="list-style-type:none">
            <li> - 1: Centoids are the nearest samples to the means</li>
            <li> - 2: Centoids are the means</li>
            </ul></param>
            <param name="InitialGuess">a bool, if true Kmeans clustering start with an initial guess for the centroids else it will start with a random assignment.</param>
            <param name="LoadObject">settings to load a clustering instance. can be "" or null in case of not loading</param>
            <param name="Replace"></param>
        </member>
        <member name="T:AnomalyDetection.Interfaces.SaveLoadSettings">
            <summary>
            SaveLoadSettings is a class that contains the desired settings by the user for saving or loading.
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.SaveLoadSettings.Method">
            <summary>
            the desired method for saving or loading
            <ul style="list-style-type:none">
            <li> - JSON: Used for saving to or loading from JSON files. </li>
            </ul>
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.SaveLoadSettings.Path1">
            <summary>
            a needed path for saving to or loading from a destination
            </summary>
        </member>
        <member name="P:AnomalyDetection.Interfaces.SaveLoadSettings.Replace">
            <summary>
            bool if true, overwriting an existing clustering instance is allowed
            </summary>
        </member>
        <member name="M:AnomalyDetection.Interfaces.SaveLoadSettings.JSON_Settings(System.String,AnomalyDetection.Interfaces.SaveLoadSettings@,System.Boolean)">
            <summary>
            JSON_Settings is a function that creates saving or loading settings for JSON files.
            </summary>
            <param name="Path1">path for saving to or loading from a destination</param>
            <param name="Replace">bool if true, overwriting an existing clustering instance is allowed</param>
            <param name="SaveLoadObject">the returned saved ot load JSON settings</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
    </members>
</doc>
