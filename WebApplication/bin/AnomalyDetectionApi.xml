<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AnomalyDetectionApi</name>
    </assembly>
    <members>
        <member name="T:AnomalyDetectionApi.AnomalyDetectionAPI">
            <summary>
            AnomalyDetectionAPI is a class containing basic information about a clustering instance.
            </summary>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.#ctor(System.Double[][],System.Int32)">
            <summary>
            Constructor for creating AnomalyDetectionAPI object
            </summary>
            <param name="RawData">data to be clustered</param>
            <param name="NumberOfClusters">desired number of clusters</param>
        </member>
        <member name="P:AnomalyDetectionApi.AnomalyDetectionAPI.RawData">
            <summary>
            data to be clustered
            </summary>
        </member>
        <member name="P:AnomalyDetectionApi.AnomalyDetectionAPI.NumberOfClusters">
            <summary>
            desired number of clusters
            </summary>
        </member>
        <member name="P:AnomalyDetectionApi.AnomalyDetectionAPI.Centroids">
            <summary>
            the resulting centroids
            </summary>
        </member>
        <member name="P:AnomalyDetectionApi.AnomalyDetectionAPI.InClusterMaxDistance">
            <summary>
            distance between the centroid and the farthest smaple in each cluster
            </summary>
        </member>
        <member name="P:AnomalyDetectionApi.AnomalyDetectionAPI.DataToClusterMapping">
            <summary>
            contains the assigned cluster number for each sample of the RawData
            </summary>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.ImportNewDataForClustering(AnomalyDetection.Interfaces.ClusteringSettings)">
            <summary>
            ImportNewDataForClustering is a function that start a new clustering instance or add to an existing one. It saves the results automatically.
            </summary>
            <param name="Settings">contains the desired settings for the clustering process</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "Clustering Complete. K-means stopped at the maximum allowed iteration: " + Maximum_Allowed_Iteration </li>
            <li> or </li>
            <li> - Code: 0, "Clustering Complete. K-means converged at iteration: " + Iteration_Reached </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.CheckSample(AnomalyDetection.Interfaces.CheckingSampleSettings,System.Int32@)">
            <summary>
            CheckSample is a function that detects to which cluster the given sample belongs to.
            </summary>
            <param name="Settings">contains the desired settings for detecting to which, if any, cluster the sample belongs</param>
            <param name="ClusterIndex">the cluster number to which the sample belongs (-1 if the sample doesn't belong to any cluster or if an error was encountered).</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "This sample belongs to cluster: " + Cluster_Number </li>
            <li> or </li>
            <li> - Code: 1, "This sample doesn't belong to any cluster.This is an outlier!" </li>
            </ul>       
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.GetResults(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.ClusteringResults[]@)">
            <summary>
            GetResults is a function that returns the results of an existing clustering instance 
            </summary>
            <param name="LoadSettings">settings to load the clustering instance</param>
            <param name="Result">the variable through which the clustering result are returned</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.GetPreviousSamples(AnomalyDetection.Interfaces.SaveLoadSettings,System.Double[][]@)">
            <summary>
            GetPreviousSamples is a function that loads samples from a previous clustering instance
            </summary>
            <param name="LoadSettings">settings to load the clustering instance</param>
            <param name="OldSamples">the variable through which the samples are returned</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.RecommendedNumberOfClusters(System.Double[][],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32@,System.Int32)">
            <summary>
            RecommendedNumberOfClusters is a function that returns a recommended number of clusters for the given samples.
            </summary>
            <param name="RawData">the samples to be clustered</param>
            <param name="KmeansMaxIterations">maximum allowed number of Kmeans iteration for clustering</param>
            <param name="KmeansAlgorithm">the desired Kmeans clustering algorithm (1 or 2)
            <ul style="list-style-type:none">
            <li> - 1: Centoids are the nearest samples to the means</li>
            <li> - 2: Centoids are the means</li>
            </ul></param>
            <param name="NumberOfAttributes">number of attributes for each sample</param>
            <param name="MaxNumberOfClusters">maximum desired number of clusters</param>
            <param name="MinNumberOfClusters">minimum desired number of clusters</param>
            <param name="Method">integer 0,1 or 2 representing the method to be used. 
            <ul style = "list-style-type:none" >
            <li> - Method 0: Radial method in which the farthest sample of each cluster must be closer to the cluster centoid than the nearest foreign sample of the other clusters </li>
            <li> - Method 1: Standard Deviation method in which the standard deviation in each cluster must be less than the desired standard deviation </li>
            <li> - Method 2: Both. uses radial and standard deviation methods at the same time </li>
            </ul>
            </param>
            <param name="StdDev">the desired standard deviation upper limit in each cluster</param>
            <param name="RecNumberOfClusters">the variable through which the recommended number of clusters is returned</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style = "list-style-type:none" >
            <li> - Code: 0, "OK" </li>
            <li> or </li>
            <li> - Code: 1, "Could not find a recommended number of clusters based on the desired constraints" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.KMeansClusteringAlg(System.Double[][],System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Double[][]@,System.Int32@)">
            <summary>
            KMeansClusteringAlg is a function that clusters the given samples based on the K-means concept.
            </summary>
            <param name="rawData">the samples to be clustered</param>
            <param name="numClusters">desired number of clusters</param>
            <param name="numAttributes">number of attributes for each sample</param>
            <param name="maxCount">maximum allowed number of Kmeans iteration for clustering</param>
            <param name="KmeansAlgortihm">the desired Kmeans clustering algorithm (1 or 2)
            <ul style="list-style-type:none">
            <li> - 1: Centoids are the nearest samples to the means</li>
            <li> - 2: Centoids are the means</li>
            </ul></param>
            <param name="InitialGuess">a bool, if true Kmeans clustering start with an initial guess for the centroids else it will start with a random assignment</param>
            <param name="centroids">the variable through which the resulting centroids are returned</param>
            <param name="IterationReached">the variable through which the iteration reached is returned</param>
            <returns>Tuple of two Items: <br />
            - Item 1: contains the assigned cluster number for each sample of the RawData <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return: 
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.InitClustering(System.Int32,System.Int32,System.Int32)">
            <summary> 
            InitClustering is a function that assigns a sample to each cluster and then randomly assigns the remaining samples on all clusters.
            </summary>
            <param name="numTuples">number of samples</param>
            <param name="numClusters">number of clusters</param>
            <param name="randomSeed">random seed for randomly assigning the samples to the clusters</param>
            <returns>Tuple of two Items: <br />
            - Item 1: contains the assigned cluster number for each sample of the RawData <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.Allocate(System.Int32,System.Int32)">
            <summary>
            Allocate is a function that creates a double[][] with the specified size (number of clusters x number of attributes).
            </summary>
            <param name="numClusters">number of clusters</param>
            <param name="numAttributes">number of attributes</param>
            <returns>Tuple of two Items: <br />
            - Item 1: the allocated double[][] <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.UpdateMeans(System.Double[][],System.Int32[],System.Double[][])">
            <summary>
            UpdateMeans is a function that calculates the new mean of each cluster.
            </summary>
            <param name="rawData">the samples to be clustered</param>
            <param name="clustering">contains the assigned cluster number for each sample of the RawData</param>
            <param name="means">mean of each cluster (Updated in the function)</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.UpdateCentroids(System.Double[][],System.Int32[],System.Double[][],System.Double[][])">
            <summary>
            UpdateCentroids is a function that assigns the nearest sample to each mean as the centroid of a cluster.
            </summary>
            <param name="rawData">the samples to be clustered</param>
            <param name="clustering">contains the assigned cluster number for each sample of the RawData</param>
            <param name="means">mean of each cluster</param>
            <param name="centroids">centroid of each cluster (Updated in the function)</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.ComputeCentroid(System.Double[][],System.Int32[],System.Int32,System.Double[][])">
            <summary>
            ComputeCentroid is a function that assigns the nearest sample to the mean as the centroid of a cluster.
            </summary>
            <param name="rawData">the samples to be clustered</param>
            <param name="clustering">contains the assigned cluster number for each sample of the RawData</param>
            <param name="cluster">number of the cluster</param>
            <param name="means">mean of each cluster</param>
            <returns>Tuple of two Items: <br />
            - Item 1: the centroid <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns> <br />
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.Assign(System.Double[][],System.Int32[],System.Double[][])">
            <summary>
            Assign is a function that assigns each sample to the nearest clusters' centroids. If the new assignment is the same as the older one, it returns true else it will return false.
            </summary>
            <param name="rawData">the samples to be clustered</param>
            <param name="clustering">contains the assigned cluster number for each sample of the RawData</param>
            <param name="centroids">centroid of each cluster</param>
            <returns>Tuple of two Items: <br />
            - Item 1: true if new assignment is the same as the old one, else false. <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.MinIndex(System.Double[])">
            <summary>
            MinIndex is a function that returns the index of the smallest distance between a set of distances.
            </summary>
            <param name="distances">distance between each sample and the centroid</param>
            <returns>
            - Item 1: index of the smallest distance <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.GetInitialGuess(System.Double[][],System.Int32,System.Double[][]@)">
            <summary>
            GetInitialGuess returns initial guess for the means.
            </summary>
            <param name="RawData">the samples to be clustered</param>
            <param name="NumberOfClusters">number of clusters</param>
            <param name="Means">the initial guess for the means</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul></returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.PreproccessingOfParameters(System.Double[][],System.Int32,System.Int32,System.Int32,System.Int32,AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.SaveLoadSettings@,AnomalyDetection.Interfaces.SaveLoadSettings@)">
            <summary>
            PreproccessingOfParameters is a function that does some checks on the passed parameters by the user. Some errors in the paths can be corrected.
            </summary>
            <param name="RawData">the samples to be clustered</param>
            <param name="KmeansAlgorithm">the desired Kmeans clustering algorithm (1 or 2)
            <ul style="list-style-type:none">
            <li> - 1: Centoids are the nearest samples to the means</li>
            <li> - 2: Centoids are the means</li>
            </ul></param>
            <param name="KmeansMaxIterations">maximum allowed number of Kmeans iteration for clustering</param>
            <param name="NumberOfClusters">desired number of clusters</param>
            <param name="NumberOfAttributes">number of attributes for each sample</param>
            <param name="SaveObj">settings to save the clustering instance</param>
            <param name="LoadObj">settings to load the clustering instance. Should be null in case of not loading</param>
            <param name="CheckedSaveObj">the object through which the error-less save settings are returned</param>
            <param name="CheckedLoadObj">the object through which the error-less load settings are returned</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.VerifyRawDataConsistency(System.Double[][],System.Int32)">
            <summary>
            VerifyRawDataConsistency is a function that checks that all the samples have same given number of attributes.
            </summary>
            <param name="RawData">the samples to be clustered</param>
            <param name="NumberOfAttributes">number of attributes for each sample</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.PrivateCheckSamples(System.Double[][],System.Double[][],System.Double[])">
            <summary>
            PrivateCheckSamples is a function that remove the outliers from the given samples and returns the accepted samples only.
            </summary>
            <param name="RawData">the samples to be clustered</param>
            <param name="Centroids">centroid of each cluster</param>
            <param name="InClusterMaxDistance">distance between the centroid and the farthest sample of each cluster</param>
            <returns>
            - Item 1: the accepted samples (outliers removed) <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.CalculateDistance(System.Double[],System.Double[])">
            <summary>
            CalculateDistance is a function that claculates the distance between two elements of same size.
            </summary>
            <param name="FirstElement">first element</param>
            <param name="SecondElement">second element</param>
            <returns>
            - Item 1: distance between the two elements <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.RadialClustersCheck(AnomalyDetection.Interfaces.ClusteringResults[])">
            <summary>
            RadialClustersCheck is a function that returns true if the farthest sample of each cluster is closer to the cluster centoid than the nearest foreign sample of the other clusters.
            </summary>
            <param name="Results">results of a clustering instance</param>
            <returns>
            - Item 1: true if the farthest sample of each cluster is closer to the cluster centoid than the nearest foreign sample of the other clusters, else false <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.StdDeviationClustersCheck(AnomalyDetection.Interfaces.ClusteringResults[],System.Double[])">
            <summary>
            StdDeviationClustersCheck is a function that returns true if the standard deviation in each cluster is less than the desired standard deviation
            </summary>
            <param name="Results">results of a clustering instance</param>
            <param name="StdDeviation">the desired standard deviation upper limit in each cluster</param> 
            <returns>
            - Item 1: true if the standard deviation in each cluster is less than the desired standard deviation, else false <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.AnomalyDetectionAPI.SelectInterfaceType(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetectionApi.ISaveLoad@)">
            <summary>
            SelectInterfaceType is a function that creates the needed save/load interface desired by the user to save or load.
            </summary>
            <param name="SaveLoadObject">settings to save or load</param>
            <param name="SaveInterface">the created interface to save or load</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style = "list-style-type:none" >
            <li> - Code: 0, "OK" </li>
            <li> or </li>
            <li> - Code: 1, "Warning: Null SaveLoadSettingss Object" </li>
            </ul></returns>
        </member>
        <member name="T:AnomalyDetectionApi.ISaveLoad">
            <summary>
            ISaveLoad is the defined interface for saving and loading methods.
            </summary>
        </member>
        <member name="M:AnomalyDetectionApi.ISaveLoad.Save(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetectionApi.AnomalyDetectionAPI)">
            <summary>
            Save is a function that saves an instance of AnomalyDetectionAPI.
            </summary>
            <param name="SaveObject">settings to save the AnomalyDetectionAPI instance</param>
            <param name="Instance">AnomalyDetectionAPI object to be saved</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.ISaveLoad.Save(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.ClusteringResults[])">
            <summary>
            Save is a function that saves the clustering results.
            </summary>
            <param name="SaveObject">settings to save the AnomalyDetectionAPI instance</param>
            <param name="Results">the  clustering results object to be saved</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.ISaveLoad.SaveChecks(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.SaveLoadSettings@)">
            <summary>
            SaveChecks is a function that checks the saving settings for errors. Some errors can be corrected.
            </summary>
            <param name="SaveObject">settings to save</param>
            <param name="CheckedSaveObject">the checked settings to save</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.ISaveLoad.Load_AnomalyDetectionAPI(AnomalyDetection.Interfaces.SaveLoadSettings)">
            <summary>
            LoadJSON_AnomalyDetectionAPI is a function that deserializes and loads an AnomalyDetectionAPI object from a JSON file.
            </summary>
            <param name="LoadObject">settings to load the AnomalyDetectionAPI instance</param>
            <returns>
            - Item 1: the loaded AnomalyDetectionAPI object <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.ISaveLoad.Load_ClusteringResults(AnomalyDetection.Interfaces.SaveLoadSettings)">
            <summary>
            LoadJSON_ClusteringResults is a function that deserializes and loads a ClusteringResults[] object from a JSON file.
            </summary>
            <param name="LoadObject">settings to load the ClusteringResults[] object</param>
            <returns>
            - Item 1: the loaded ClusteringResults[] object <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.ISaveLoad.LoadChecks(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.SaveLoadSettings@)">
            <summary>
            LoadChecks is a function that checks the load settings for errors. Some errors can be corrected.
            </summary>
            <param name="LoadObject">settings to load</param>
            <param name="CheckedLoadObject">the checked settings to load</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="T:AnomalyDetectionApi.JSON_SaveLoad">
            <summary>
            JSON_SaveLoad is class that saves to or loads from JSON files.
            </summary>
        </member>
        <member name="M:AnomalyDetectionApi.JSON_SaveLoad.Save(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetectionApi.AnomalyDetectionAPI)">
            <summary>
            Save is a function that saves an instance of AnomalyDetectionAPI.
            </summary>
            <param name="SaveObject">settings to save the AnomalyDetectionAPI instance</param>
            <param name="Instance">AnomalyDetectionAPI object to be saved</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.JSON_SaveLoad.Save(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.ClusteringResults[])">
            <summary>
            Save is a function that saves the clustering results.
            </summary>
            <param name="SaveObject">settings to save the AnomalyDetectionAPI instance</param>
            <param name="Results">the  clustering results object to be saved</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.JSON_SaveLoad.SaveChecks(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.SaveLoadSettings@)">
            <summary>
            SaveChecks is a function that checks the saving settings for errors. Some errors can be corrected.
            </summary>
            <param name="SaveObject">settings to save</param>
            <param name="CheckedSaveObject">the checked settings to save</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.JSON_SaveLoad.Load_AnomalyDetectionAPI(AnomalyDetection.Interfaces.SaveLoadSettings)">
            <summary>
            LoadJSON_AnomalyDetectionAPI is a function that deserializes and loads an AnomalyDetectionAPI object from a JSON file.
            </summary>
            <param name="LoadObject">settings to load the AnomalyDetectionAPI instance</param>
            <returns>
            - Item 1: the loaded AnomalyDetectionAPI object <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.JSON_SaveLoad.Load_ClusteringResults(AnomalyDetection.Interfaces.SaveLoadSettings)">
            <summary>
            LoadJSON_ClusteringResults is a function that deserializes and loads a ClusteringResults[] object from a JSON file.
            </summary>
            <param name="LoadObject">settings to load the ClusteringResults[] object</param>
            <returns>
            - Item 1: the loaded ClusteringResults[] object <br />
            - Item 2: a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.JSON_SaveLoad.LoadChecks(AnomalyDetection.Interfaces.SaveLoadSettings,AnomalyDetection.Interfaces.SaveLoadSettings@)">
            <summary>
            LoadChecks is a function that checks the load settings for errors. Some errors can be corrected.
            </summary>
            <param name="LoadObject">settings to load</param>
            <param name="CheckedLoadObject">the checked settings to load</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
        <member name="M:AnomalyDetectionApi.JSON_SaveLoad.CheckPath(System.String,System.String@)">
            <summary>
            CheckPath is a function that checks the input path for errors. Some errors can be corrected.
            </summary>
            <param name="InputPath">path to be checked</param>
            <param name="OutputPath">the variable through which the error-less path is returned</param>
            <returns>a code and a message that state whether the function succeeded or encountered an error. When the function succeeds, it will return:
            <ul style="list-style-type:none">
            <li> - Code: 0, "OK" </li>
            </ul>
            </returns>
        </member>
    </members>
</doc>
